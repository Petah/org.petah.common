/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PMemoryMonitor.java
 *
 * Created on 28/09/2009, 6:48:29 AM
 */
package org.petah.common.util.profiler.gui;

import org.petah.common.util.FormatUtil;
import org.petah.common.util.profiler.Memory;

/**
 *
 * @author Petah
 */
public class PMemoryMonitor extends javax.swing.JPanel {

    private Memory memory = new Memory();

    /** Creates new form PMemoryMonitor */
    public PMemoryMonitor() {
        initComponents();
    }

    public void update() {
        memory.update();
        tfFree.setText(FormatUtil.formatBytes(memory.getFree()));
        tfUsed.setText(FormatUtil.formatBytes(memory.getUsed()));
        tfMaximum.setText(FormatUtil.formatBytes(memory.getMaximum()));
        tfAllocated.setText(FormatUtil.formatBytes(memory.getAllocated()));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lHeader = new javax.swing.JLabel();
        lFree = new javax.swing.JLabel();
        lUsed = new javax.swing.JLabel();
        tfFree = new javax.swing.JTextField();
        tfUsed = new javax.swing.JTextField();
        tfAllocated = new javax.swing.JTextField();
        tfMaximum = new javax.swing.JTextField();
        lMaximum = new javax.swing.JLabel();
        lAllocated = new javax.swing.JLabel();
        bGarbageCollect = new javax.swing.JButton();
        spacer = new javax.swing.JSeparator();

        setLayout(new java.awt.GridBagLayout());

        lHeader.setText("Memory Monitor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(lHeader, gridBagConstraints);

        lFree.setText("Free");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(lFree, gridBagConstraints);

        lUsed.setText("Used");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(lUsed, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(tfFree, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(tfUsed, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(tfAllocated, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(tfMaximum, gridBagConstraints);

        lMaximum.setText("Maximum");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(lMaximum, gridBagConstraints);

        lAllocated.setText("Allocated");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(lAllocated, gridBagConstraints);

        bGarbageCollect.setText("Garbage Collect");
        bGarbageCollect.setToolTipText("Attempt to free unused memory");
        bGarbageCollect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGarbageCollectActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(bGarbageCollect, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(spacer, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void bGarbageCollectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGarbageCollectActionPerformed
        System.gc();
}//GEN-LAST:event_bGarbageCollectActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGarbageCollect;
    private javax.swing.JLabel lAllocated;
    private javax.swing.JLabel lFree;
    private javax.swing.JLabel lHeader;
    private javax.swing.JLabel lMaximum;
    private javax.swing.JLabel lUsed;
    private javax.swing.JSeparator spacer;
    private javax.swing.JTextField tfAllocated;
    private javax.swing.JTextField tfFree;
    private javax.swing.JTextField tfMaximum;
    private javax.swing.JTextField tfUsed;
    // End of variables declaration//GEN-END:variables
}
